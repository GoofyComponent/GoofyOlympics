generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model athlete_events {
  id     Int      @id @default(autoincrement())
  name   String?  @db.VarChar(255)
  sex    String?  @db.VarChar(255)
  age    Int?
  height Float?
  weight Float?
  team   String?  @db.VarChar(255)
  noc    String?  @db.VarChar(255)
  games  String?  @db.VarChar(255)
  year   Int?
  season String?  @db.VarChar(255)
  city   String?  @db.VarChar(255)
  sport  String?  @db.VarChar(255)
  event  String?  @db.VarChar(255)
  medal  String?  @db.VarChar(255)
}

model noc_regions {
  id     Int     @id @default(autoincrement())
  noc    String? @db.VarChar(255)
  region String? @db.VarChar(255)
  notes  String? @db.VarChar(255)

  @@unique([noc, region])
}

model users {
  id       Int    @id @default(autoincrement())
  mail     String @unique @db.VarChar(255)
  password String @db.VarChar(255)
  region   String? @db.VarChar(255)
  responses   UserResponse[]
}

model Answer {
  id          Int           @id @default(autoincrement())
  content     String
  isCorrect   Boolean
  question    Question     @relation(fields: [questionId], references: [id])
  questionId  Int
  responses   UserResponse[]
}

model UserResponse {
  id          Int           @id @default(autoincrement())
  user        users        @relation(fields: [userId], references: [id])
  userId      Int
  question    Question     @relation(fields: [questionId], references: [id])
  questionId  Int
  answer      Answer       @relation(fields: [answerId], references: [id])
  answerId    Int
  createdAt   DateTime     @default(now())

  @@unique([userId, questionId])
}

model Question {
  id          Int           @id @default(autoincrement())
  title       String       @db.VarChar(255)
  content     String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  answers     Answer[]
  responses   UserResponse[]
}